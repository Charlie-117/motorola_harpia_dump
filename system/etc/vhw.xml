<?xml version="1.0" encoding="utf-8"?>
<!--  Copyright (C) 2015/2016 Motorola Mobility, Lenovo Company -->
<validation match="ro.boot.device">
	<!-- device describes a version of mapping logic applicable to a matching device -->
	<!-- the device string to do case-insensitive substring match against "name" is
		to be queried from property indicated by "match", or its BL equivalent -->
	<!-- incremented version tells boot script to update the validation tags from this file -->
	<device name="harpia" version="3.1">

		<!-- Features list variable hardware components for this device -->
		<features>
			<string-array name=".features">
				<!-- RF banding -->
				<item>radio</item>
				<!-- RAM size -->
				<item>ram</item>
				<!-- Dual SIM function -->
				<item>dualsim</item>
				<!-- Digital TV function -->
				<item>dtv</item>
				<!-- Near Field Communication function -->
				<item>nfc</item>
				<!-- Front color -->
				<item>frontcolor</item>
			</string-array>
		</features>

		<!-- Attributes describe constraints on features -->
		<attributes>
			<string-array name=".attributes">
				<!-- range is a comma-separated list of allowed string values -->
				<item>.range</item>
				<!-- cmdline items must be exported to kernel cmdline, with prefix given in the value -->
				<item>.cmdline</item>
				<!-- chosen items must be exported to kernel devtree, with prefix given in the value -->
				<item>.chosen</item>
				<!-- system items must be exported as system property, with prefix given in the value -->
				<item>.system</item>
				<!-- same format as before, plus new attribute ".auto" -->
				<!-- auto indicates BL should auto-fill respective tag if it is empty -->
				<!-- this can work either using "hwid", "hwprobe" or "uspace" method -->
				<item>.auto</item>
			</string-array>
		</attributes>

		<!-- Constraints describe interpretation of attributes, and may contain data to feed to BL -->
		<constraints>
			<!-- look up value by matching "hwid" table, combination with current device,
				then getting field referred by "index",
				and then translating its value as prescribed by "map" -->
			<string name="radio/.auto">key=hwid;index=2;map=1:US,2:LATAM,3:Brazil,4:EMEA,5:APAC</string>
			<string name="radio/.cmdline">androidboot.</string>
			<string-array name="radio/.range">
				<item>US</item>
				<item>LATAM</item>
				<item>Brazil</item>
				<item>EMEA</item>
				<item>APAC</item>
			</string-array>

			<!-- use result of ram HW detection to fill the field -->
			<string name="ram/.auto">key=hwprobe;index=__ram</string>
			<string name="ram/.system">ro.hw.</string>
			<string-array name="ram/.range">
				<item>1GB</item>
				<item>2GB</item>
			</string-array>


			<string name="dualsim/.auto">key=hwid;index=2;map=1:false,2:true,3:true,4:false,5:true</string>
			<string name="dualsim/.cmdline">androidboot.</string>
			<string name="dualsim/.system">ro.hw.</string>
			<string-array name="dualsim/.range">
				<item>true</item>
				<item>false</item>
			</string-array>

			<string name="dtv/.auto">key=hwid;index=2;map=1:false,2:false,3:true,4:false,5:false</string>
			<string name="dtv/.chosen">mmi,</string>
			<string name="dtv/.system">ro.hw.</string>
			<string-array name="dtv/.range">
				<item>true</item>
				<item>false</item>
			</string-array>

			<string name="nfc/.auto">key=hwid;index=2;map=1:false,2:false,3:false,4:true,5:false</string>
			<string name="nfc/.chosen">mmi,</string>
			<string name="nfc/.system">ro.hw.</string>
			<string-array name="nfc/.range">
				<item>true</item>
				<item>false</item>
			</string-array>

			<!-- look up value of build_vars in config utag space -->
			<string name="frontcolor/.auto">uspace=config;name=build_vars;map=BLACK:black,WHITE:white,black:black,white:white</string>
			<string name="frontcolor/.system">ro.hw.</string>
			<string-array name="frontcolor/.range">
				<item>white</item>
				<item>black</item>
				<item>other</item>
			</string-array>
		</constraints>

		<mappings>
			<!-- Variants describe mapping of feature combinations to device fingerprints,
				to be set in property indicated by "export" -->
			<variants export="ro.hw.variant" append="ro.product.device,ro.product.name">
				<variant name="_n">
					<string name="nfc">true</string>
					<string name="dtv">false</string>
				</variant>

				<variant name="_t">
					<string name="nfc">false</string>
					<string name="dtv">true</string>
				</variant>
			</variants>
			<!-- Products describe mapping of feature combinations to marketing names,
				to be set in property indicated by "export" -->
			<products export="ro.product.display">
			</products>

			<!-- SKUs describe mapping of feature combinations to factory SKUs,
				disregard this section for now, its implementation is not urgent -->
			<skus export="ro.product.sku">
				<!-- ... same format as variants/products ... -->
			</skus>
		</mappings>
	</device>
</validation>
